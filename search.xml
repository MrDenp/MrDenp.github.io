<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[AMD - 异步模块定义]]></title>
    <url>%2F2018%2F06%2F08%2Fhello-world%2F</url>
    <content type="text"><![CDATA[AMD 是”Asynchronous Module Definition”的缩写,意思就是”异步模块定义“.它采用异步方式加载模块,模块的加载不会影响它后面程序语句的运行.所有依赖这个模块的语句,都定义在一个回调函数中,等到加载完成之后这个回调函数才会运行. AMD如何加载模块 AMD 也采用require()语句加载模块，但是不同于CommonJS，它要求两个参数：1require([module], callback); 第一个参数[module],是一个数组，数组元素就是需要依赖的加载模块,第二个参数是一个回调函数,这个回调函数在第一个参数中的模块加载成功之后才会执行.例如123require([&apos;math&apos;],function(math)&#123; math.add(2,3);&#125;) 注意 此时math.add()与math模块加载不是同步的,浏览器不会发生请求数据时的假死状态. require.js 之前文件中一次加载很多js文件的写法有很大的缺点,加载的时候,浏览器会停止网页渲染,所以加载的文件越多,网页失去响应的时间就会越长,由于js文件之间存在依赖关系,因此在依赖关系复杂的时候代码的而编写就会变得很困难. require JS 的诞生主要解决了两个问题 实现js文件的异步加载,避免网页失去响应; 管理模块之间的依赖性,便于代码的编写和维护; require.js 的加载 两种引入方式： 1.在文件头部引入时需要异步加载并且如要兼容IE则需要加defer 1&lt;script src=&quot;js/require.js&quot; defer async=&quot;true&quot; &gt;&lt;/script&gt; 2.在页面底部引入 引入require.js后就需要引入自己的js文件了 1&lt;script src=&quot;js/require.js&quot; data-main=&quot;js/main&quot;&gt;&lt;/script&gt; data-main 属性的作用是,指定网页程序的主模块.main.js会被require加载,由于require 默认的文件后缀是js,所以可以把main.js写成main1234567891011121314151617require.config(&#123; baseUrl: &quot;js/lib&quot;,//指定js加载的基目录 paths: &#123; &quot;jquery&quot;: &quot;jquery.min&quot;, &quot;underscore&quot;: &quot;underscore.min&quot;, &quot;backbone&quot;: &quot;backbone.min&quot; &#125;， shim:&#123;//这个属性是专门用来配置不兼容的模块1exports暴露出去的变量名称，deps数组表明该模块的依赖 &apos;jquery.scroll&apos;:&#123; deps:[&apos;jquery&apos;], exports:&apos;jQuery.fn.scroll&apos; &#125; &#125;&#125;);require([&apos;jquery&apos;,&apos;uderscore&apos;,&apos;backbone&apos;],function($,_,Backbone)&#123; &#125;)]]></content>
      <categories>
        <category>模块化</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>异步</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信小程序 从零开始了解微信小程序的开发（一）]]></title>
    <url>%2F2018%2F06%2F06%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E4%BA%86%E8%A7%A3%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>微信</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[如何去理解 区块链]]></title>
    <url>%2F2018%2F05%2F29%2Fblockchain%2F</url>
    <content type="text"><![CDATA[什么是区块链]]></content>
      <tags>
        <tag>区块链</tag>
        <tag>学习</tag>
      </tags>
  </entry>
</search>
